<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YJ6eKwAAAABJRU5ErkJggg==
</value>
  </data>
</root>